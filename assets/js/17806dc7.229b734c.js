"use strict";(self.webpackChunkgo_by_example=self.webpackChunkgo_by_example||[]).push([[477],{7158:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],l={sidebar_position:4},u="Gin \u6559\u7a0b",s={unversionedId:"gin-tutorial",id:"gin-tutorial",isDocsHomePage:!1,title:"Gin \u6559\u7a0b",description:"Gin \u662f\u4e00\u4e2a\u7528 Golang \u7f16\u5199\u7684\u540e\u7aef\u6846\u67b6\uff0cAPI \u8bbe\u8ba1\u7c7b\u4f3c Koa\uff0c\u4e5f\u6709 Context\u3001\u4e2d\u95f4\u4ef6\u673a\u5236\u3002\u4e0b\u9762\u6765\u5b66\u4e60\u4e00\u4e0b Gin \u7684\u7528\u6cd5\u5427\u3002",source:"@site/docs/gin-tutorial.md",sourceDirName:".",slug:"/gin-tutorial",permalink:"/go-by-example/docs/gin-tutorial",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/gin-tutorial.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"\u51fd\u6570",permalink:"/go-by-example/docs/function"}},c=[{value:"1) \u57fa\u672c\u4f7f\u7528",id:"1-\u57fa\u672c\u4f7f\u7528",children:[],level:2},{value:"2) Restful API",id:"2-restful-api",children:[],level:2},{value:"3) \u8def\u5f84\u53c2\u6570\u89e3\u6790",id:"3-\u8def\u5f84\u53c2\u6570\u89e3\u6790",children:[],level:2},{value:"4) Query \u53c2\u6570\u89e3\u6790",id:"4-query-\u53c2\u6570\u89e3\u6790",children:[],level:2},{value:"5) Multipart/Urlencoded \u8868\u5355\u89e3\u6790",id:"5-multiparturlencoded-\u8868\u5355\u89e3\u6790",children:[],level:2},{value:"6) \u6587\u4ef6\u4e0a\u4f20",id:"6-\u6587\u4ef6\u4e0a\u4f20",children:[],level:2},{value:"7) \u5206\u7ec4\u8def\u7531",id:"7-\u5206\u7ec4\u8def\u7531",children:[],level:2},{value:"8) \u521b\u5efa\u6ca1\u6709\u4e2d\u95f4\u4ef6\u7684 Gin \u5b9e\u4f8b",id:"8-\u521b\u5efa\u6ca1\u6709\u4e2d\u95f4\u4ef6\u7684-gin-\u5b9e\u4f8b",children:[],level:2},{value:"9) \u6a21\u578b\u53c2\u6570\u6821\u9a8c",id:"9-\u6a21\u578b\u53c2\u6570\u6821\u9a8c",children:[],level:2},{value:"10) \u9759\u6001\u8d44\u6e90\u670d\u52a1\u5668",id:"10-\u9759\u6001\u8d44\u6e90\u670d\u52a1\u5668",children:[],level:2},{value:"11) \u54cd\u5e94\u6587\u4ef6\u5185\u5bb9",id:"11-\u54cd\u5e94\u6587\u4ef6\u5185\u5bb9",children:[],level:2},{value:"12) HTML \u6a21\u677f\u6e32\u67d3",id:"12-html-\u6a21\u677f\u6e32\u67d3",children:[],level:2},{value:"13) \u91cd\u5b9a\u5411",id:"13-\u91cd\u5b9a\u5411",children:[],level:2},{value:"14) \u4e2d\u95f4\u4ef6\u5185\u90e8\u4f7f\u7528\u534f\u7a0b",id:"14-\u4e2d\u95f4\u4ef6\u5185\u90e8\u4f7f\u7528\u534f\u7a0b",children:[],level:2},{value:"15) \u81ea\u5b9a\u4e49 HTTP \u914d\u7f6e",id:"15-\u81ea\u5b9a\u4e49-http-\u914d\u7f6e",children:[],level:2},{value:"16) \u4f18\u96c5\u9000\u51fa\u548c\u91cd\u542f",id:"16-\u4f18\u96c5\u9000\u51fa\u548c\u91cd\u542f",children:[],level:2},{value:"\u53c2\u8003",id:"\u53c2\u8003",children:[],level:2}],m={toc:c};function p(n){var e=n.components,t=(0,a.Z)(n,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gin-\u6559\u7a0b"},"Gin \u6559\u7a0b"),(0,i.kt)("p",null,"Gin \u662f\u4e00\u4e2a\u7528 Golang \u7f16\u5199\u7684\u540e\u7aef\u6846\u67b6\uff0cAPI \u8bbe\u8ba1\u7c7b\u4f3c Koa\uff0c\u4e5f\u6709 Context\u3001\u4e2d\u95f4\u4ef6\u673a\u5236\u3002\u4e0b\u9762\u6765\u5b66\u4e60\u4e00\u4e0b Gin \u7684\u7528\u6cd5\u5427\u3002"),(0,i.kt)("h2",{id:"1-\u57fa\u672c\u4f7f\u7528"},"1) \u57fa\u672c\u4f7f\u7528"),(0,i.kt)("p",null,"\u9996\u5148\u5728\u672c\u5730\u521d\u59cb\u5316\u4e00\u4e2a\u9879\u76ee\u76ee\u5f55\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ mkdir gin_example && cd gin_example\n# \u521d\u59cb\u5316\u4e00\u4e2a go.mod\n$ go mod init example.com/m\n")),(0,i.kt)("p",null,"\u5b89\u88c5 Gin\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ go get github.com/gin-gonic/gin\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u5b89\u88c5\u4e4b\u540e\u5c31\u53ef\u4ee5\u770b\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"go.mod")," \u91cc\u9762\u591a\u4e86\u4e00\u4e9b\u4e1c\u897f")),(0,i.kt)("p",null,"\u5982\u679c\u5b89\u88c5\u51fa\u73b0\u8bf7\u6c42\u8d85\u65f6\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u955c\u50cf\u6e90\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ go env -w GO111MODULE=on\n$ go env -w GOPROXY=https://goproxy.cn,https://goproxy.io,direct\n")),(0,i.kt)("p",null,"\u521b\u5efa\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"src/main.go"),"\uff0c\u7f16\u5199\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "github.com/gin-gonic/gin"\n)\n\nfunc main() {\n    r := gin.Default()\n    r.GET("/ping", func(c *gin.Context) {\n    // gin.H \u5b9e\u9645\u4e0a\u5c31\u662f map[string]interface{} \u7684\u522b\u540d\n        c.JSON(200, gin.H{\n            "message": "Hello world",\n        })\n    })\n  // \u9ed8\u8ba4\u76d1\u542c :8080 \u7aef\u53e3\n    r.Run()\n}\n')),(0,i.kt)("p",null,"\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5373\u53ef\u542f\u52a8\u670d\u52a1\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ go run ./src/main.go\n")),(0,i.kt)("h2",{id:"2-restful-api"},"2) Restful API"),(0,i.kt)("p",null,"Gin \u652f\u6301\u5404\u79cd\u8bf7\u6c42\u65b9\u6cd5\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    // \u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\u7684 gin router\n    // \u9ed8\u8ba4\u914d\u7f6e\u4e86\u4e24\u4e2a\u4e2d\u95f4\u4ef6\uff1alogger \u548c recovery\uff08\u9632\u6b62\u5f02\u5e38\u5d29\u6e83\uff09\n    router := gin.Default()\n\n    router.GET("/someGet", getting)\n    router.POST("/somePost", posting)\n    router.PUT("/somePut", putting)\n    router.DELETE("/someDelete", deleting)\n    router.PATCH("/somePatch", patching)\n    router.HEAD("/someHead", head)\n    router.OPTIONS("/someOptions", options)\n\n  // \u9ed8\u8ba4\u76d1\u542c :8080 \u7aef\u53e3\n  // \u4e5f\u53ef\u4ee5\u901a\u8fc7 router.Run(":3000") \u624b\u52a8\u6307\u5b9a\u7aef\u53e3\n    router.Run()\n}\n')),(0,i.kt)("h2",{id:"3-\u8def\u5f84\u53c2\u6570\u89e3\u6790"},"3) \u8def\u5f84\u53c2\u6570\u89e3\u6790"),(0,i.kt)("p",null,"\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"c.Param()")," \u83b7\u53d6\u8def\u5f84\u53c2\u6570\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n\n  // \u5339\u914d /user/john\n  // \u4e0d\u4f1a\u5339\u914d /user/ \u6216\u8005 /user\n    router.GET("/user/:name", func(c *gin.Context) {\n        name := c.Param("name")\n        c.String(http.StatusOK, "Hello %s", name)\n    })\n\n  // \u540c\u65f6\u5339\u914d /user/john/ \u548c /user/john/send\n  // \u5982\u679c\u6ca1\u6709\u5176\u4ed6\u8def\u7531\u5339\u914d\u5230 /user/john\uff0c\u4f1a\u91cd\u5b9a\u5411\u5230 /user/john\n    router.GET("/user/:name/*action", func(c *gin.Context) {\n        name := c.Param("name")\n        action := c.Param("action")\n        message := name + " is " + action\n        c.String(http.StatusOK, message)\n    })\n\n    // \u53ef\u4ee5\u901a\u8fc7 c.FullPath() \u83b7\u53d6\u5230\u5f53\u524d\u8def\u7531\u5b9a\u4e49\n    router.POST("/user/:name/*action", func(c *gin.Context) {\n        b := c.FullPath() == "/user/:name/*action" // true\n        c.String(http.StatusOK, "%t", b)\n    })\n\n    // Exact routes \u4f1a\u5728 param routes \u4e4b\u524d\u89e3\u6790\uff0c\u4e0d\u7ba1\u6dfb\u52a0\u7684\u987a\u5e8f\u5982\u4f55\n    // \u4e0b\u9762\u7684 /user/groups \u4e0d\u4f1a\u88ab\u89e3\u6790\u4e3a /user/:name/...\n    router.GET("/user/groups", func(c *gin.Context) {\n        c.String(http.StatusOK, "The available groups are [...]")\n    })\n\n    router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"4-query-\u53c2\u6570\u89e3\u6790"},"4) Query \u53c2\u6570\u89e3\u6790"),(0,i.kt)("p",null,"\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"c.Query")," \u83b7\u53d6 Query \u53c2\u6570\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n\n    // \u8bf7\u6c42\u5730\u5740 /welcome?firstname=Jane&lastname=Doe \u4f1a\u5339\u914d\u5230\u4e0b\u9762\u7684\u8def\u7531\n    router.GET("/welcome", func(c *gin.Context) {\n    // \u5982\u679c firstname \u6ca1\u4f20\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\n        firstname := c.DefaultQuery("firstname", "Guest")\n    // c.Query("lastname") \u662f c.Request.URL.Query().Get("lastname") \u7684\u522b\u540d\n        lastname := c.Query("lastname")\n\n        c.String(http.StatusOK, "Hello %s %s", firstname, lastname)\n    })\n    router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"5-multiparturlencoded-\u8868\u5355\u89e3\u6790"},"5) Multipart/Urlencoded \u8868\u5355\u89e3\u6790"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"multipart/form-data")," \u5bf9\u5e94 ",(0,i.kt)("inlineCode",{parentName:"p"},"FormData")," \u63d0\u4ea4\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"application/x-www-form-urlencoded")," \u5bf9\u5e94 HTML \u8868\u5355\u63d0\u4ea4\u3002\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"c.PostForm()")," \u63a5\u53d7\u8868\u5355\u6570\u636e\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n\n  // \u63d0\u4ea4\u5185\u5bb9\uff1aname=manu&message=this_is_great\n    router.POST("/form_post", func(c *gin.Context) {\n        message := c.PostForm("message")\n        nick := c.DefaultPostForm("nick", "anonymous")\n\n        c.JSON(200, gin.H{\n            "status":  "posted",\n            "message": message,\n            "nick":    nick,\n        })\n    })\n    router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"6-\u6587\u4ef6\u4e0a\u4f20"},"6) \u6587\u4ef6\u4e0a\u4f20"),(0,i.kt)("p",null,"\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"c.FormFile()")," \u63a5\u53d7\u4e0a\u4f20\u6587\u4ef6\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n    // Set a lower memory limit for multipart forms (default is 32 MiB)\n    router.MaxMultipartMemory = 8 << 20  // 8 MiB\n    router.POST("/upload", func(c *gin.Context) {\n        // Single file\n        file, _ := c.FormFile("Filename")\n        log.Println(file.Filename)\n\n        // Upload the file to specific dst.\n        c.SaveUploadedFile(file, dst)\n\n        c.String(http.StatusOK, fmt.Sprintf("\'%s\' uploaded!", file.Filename))\n    })\n    router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"7-\u5206\u7ec4\u8def\u7531"},"7) \u5206\u7ec4\u8def\u7531"),(0,i.kt)("p",null,"\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u529f\u80fd\u5728\u6a21\u5757\u5212\u5206\u3001\u8def\u7531\u9274\u6743\u7b49\u573a\u666f\u975e\u5e38\u6709\u7528\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n\n    // Simple group: v1\n    v1 := router.Group("/v1")\n    {\n        v1.POST("/login", loginEndpoint)\n        v1.POST("/submit", submitEndpoint)\n        v1.POST("/read", readEndpoint)\n    }\n\n    // Simple group: v2\n    v2 := router.Group("/v2")\n    {\n        v2.POST("/login", loginEndpoint)\n        v2.POST("/submit", submitEndpoint)\n        v2.POST("/read", readEndpoint)\n    }\n\n    router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"8-\u521b\u5efa\u6ca1\u6709\u4e2d\u95f4\u4ef6\u7684-gin-\u5b9e\u4f8b"},"8) \u521b\u5efa\u6ca1\u6709\u4e2d\u95f4\u4ef6\u7684 Gin \u5b9e\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n  // \u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\u7684\u8def\u7531\n    r := gin.New()\n\n    // \u5168\u5c40\u4e2d\u95f4\u4ef6\n    r.Use(gin.Logger())\n    r.Use(gin.Recovery())\n\n    // \u9488\u5bf9\u8def\u7531\u7684\u4e2d\u95f4\u4ef6\uff0c\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u6570\u91cf\n    r.GET("/benchmark", MyBenchLogger(), benchEndpoint)\n\n    // \u9274\u6743\u5206\u7ec4\n    // authorized := r.Group("/", AuthRequired())\n    authorized := r.Group("/")\n  // \u9488\u5bf9 "authorized" \u5206\u7ec4\u542f\u7528 AuthRequired() \u4e2d\u95f4\u4ef6\n    authorized.Use(AuthRequired())\n    {\n        authorized.POST("/login", loginEndpoint)\n        authorized.POST("/submit", submitEndpoint)\n        authorized.POST("/read", readEndpoint)\n\n        // \u5d4c\u5957\u5206\u7ec4\n        testing := authorized.Group("testing")\n        testing.GET("/analytics", analyticsEndpoint)\n    }\n\n    // Listen and serve on 0.0.0.0:8080\n    r.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"9-\u6a21\u578b\u53c2\u6570\u6821\u9a8c"},"9) \u6a21\u578b\u53c2\u6570\u6821\u9a8c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "log"\n    "time"\n\n    "github.com/gin-gonic/gin"\n)\n\ntype Person struct {\n    Name       string    `form:"name"`\n    Address    string    `form:"address"`\n    Birthday   time.Time `form:"birthday" time_format:"2006-01-02" time_utc:"1"`\n    CreateTime time.Time `form:"createTime" time_format:"unixNano"`\n    UnixTime   time.Time `form:"unixTime" time_format:"unix"`\n}\n\nfunc main() {\n    route := gin.Default()\n    route.GET("/testing", startPage)\n    route.Run(":8085")\n}\n\nfunc startPage(c *gin.Context) {\n    var person Person\n  if c.ShouldBind(&person) == nil {\n    log.Println(person.Name)\n    log.Println(person.Address)\n    log.Println(person.Birthday)\n    log.Println(person.CreateTime)\n    log.Println(person.UnixTime)\n  }\n\n    c.String(200, "Success")\n}\n')),(0,i.kt)("h2",{id:"10-\u9759\u6001\u8d44\u6e90\u670d\u52a1\u5668"},"10) \u9759\u6001\u8d44\u6e90\u670d\u52a1\u5668"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n    router.Static("/assets", "./assets")\n    router.StaticFS("/more_static", http.Dir("my_file_system"))\n    router.StaticFile("/favicon.ico", "./resources/favicon.ico")\n\n    // Listen and serve on 0.0.0.0:8080\n    router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"11-\u54cd\u5e94\u6587\u4ef6\u5185\u5bb9"},"11) \u54cd\u5e94\u6587\u4ef6\u5185\u5bb9"),(0,i.kt)("p",null,"\u4f8b\u5982\u6587\u4ef6\u4e0b\u8f7d\u7b49\u573a\u666f\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n\n    router.GET("/local/file", func(c *gin.Context) {\n        c.File("local/file.go")\n    })\n\n    var fs http.FileSystem = // ...\n    router.GET("/fs/file", func(c *gin.Context) {\n        c.FileFromFS("fs/file.go", fs)\n    })\n}\n')),(0,i.kt)("h2",{id:"12-html-\u6a21\u677f\u6e32\u67d3"},"12) HTML \u6a21\u677f\u6e32\u67d3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n    router.LoadHTMLGlob("templates/*")\n    //router.LoadHTMLFiles("templates/template1.html", "templates/template2.html")\n    router.GET("/index", func(c *gin.Context) {\n        c.HTML(http.StatusOK, "index.tmpl", gin.H{\n            "title": "Main website",\n        })\n    })\n    router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"13-\u91cd\u5b9a\u5411"},"13) \u91cd\u5b9a\u5411"),(0,i.kt)("p",null,"301 \u91cd\u5b9a\u5411\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'r.GET("/test", func(c *gin.Context) {\n    c.Redirect(http.StatusMovedPermanently, "http://www.google.com/")\n})\n')),(0,i.kt)("p",null,"302 \u91cd\u5b9a\u5411\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'r.POST("/test", func(c *gin.Context) {\n    c.Redirect(http.StatusFound, "/foo")\n})\n')),(0,i.kt)("p",null,"\u8def\u7531\u91cd\u5b9a\u5411\uff0c\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"HandleContext"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'r.GET("/test", func(c *gin.Context) {\n    c.Request.URL.Path = "/test2"\n    r.HandleContext(c)\n})\nr.GET("/test2", func(c *gin.Context) {\n    c.JSON(200, gin.H{"hello": "world"})\n})\n')),(0,i.kt)("h2",{id:"14-\u4e2d\u95f4\u4ef6\u5185\u90e8\u4f7f\u7528\u534f\u7a0b"},"14) \u4e2d\u95f4\u4ef6\u5185\u90e8\u4f7f\u7528\u534f\u7a0b"),(0,i.kt)("p",null,"\u4f7f\u7528\u534f\u7a0b\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u5728\u5185\u90e8\u4f7f\u7528\u539f\u59cb Context \u5bf9\u8c61\uff0c\u5e94\u8be5\u521b\u5efa\u4e00\u4efd\u53ea\u8bfb\u62f7\u8d1d\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    r := gin.Default()\n\n    r.GET("/long_async", func(c *gin.Context) {\n    // \u521b\u5efa Context \u7684\u62f7\u8d1d\n        cCp := c.Copy()\n        go func() {\n      // \u4f7f\u7528 time.Sleep() \u6a21\u62df\u957f\u4efb\u52a1\n            time.Sleep(5 * time.Second)\n\n            // \u8fd9\u91cc\u7684 cCp \u662f Context \u7684\u62f7\u8d1d\n            log.Println("Done! in path " + cCp.Request.URL.Path)\n        }()\n    })\n\n    r.GET("/long_sync", func(c *gin.Context) {\n        // \u4f7f\u7528 time.Sleep() \u6a21\u62df\u957f\u4efb\u52a1\n        time.Sleep(5 * time.Second)\n\n        // \u4e0d\u4f7f\u7528\u534f\u7a0b\u5219\u4e0d\u9700\u8981\u521b\u5efa\u62f7\u8d1d\n        log.Println("Done! in path " + c.Request.URL.Path)\n    })\n\n    // Listen and serve on 0.0.0.0:8080\n    r.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"15-\u81ea\u5b9a\u4e49-http-\u914d\u7f6e"},"15) \u81ea\u5b9a\u4e49 HTTP \u914d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    router := gin.Default()\n\n    s := &http.Server{\n        Addr:           ":8080",\n        Handler:        router,\n        ReadTimeout:    10 * time.Second,\n        WriteTimeout:   10 * time.Second,\n        MaxHeaderBytes: 1 << 20,\n    }\n    s.ListenAndServe()\n}\n')),(0,i.kt)("h2",{id:"16-\u4f18\u96c5\u9000\u51fa\u548c\u91cd\u542f"},"16) \u4f18\u96c5\u9000\u51fa\u548c\u91cd\u542f"),(0,i.kt)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gin-gonic/gin"},"https://github.com/gin-gonic/gin")))}p.isMDXComponent=!0}}]);